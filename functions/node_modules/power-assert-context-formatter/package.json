{
  "_args": [
    [
      {
        "raw": "power-assert-context-formatter@^1.0.7",
        "scope": null,
        "escapedName": "power-assert-context-formatter",
        "name": "power-assert-context-formatter",
        "rawSpec": "^1.0.7",
        "spec": ">=1.0.7 <2.0.0",
        "type": "range"
      },
      "/home/laboratoria/proyectos/electivos/burger-queen/functions/node_modules/power-assert-formatter"
    ]
  ],
  "_from": "power-assert-context-formatter@>=1.0.7 <2.0.0",
  "_id": "power-assert-context-formatter@1.2.0",
  "_inCache": true,
  "_location": "/power-assert-context-formatter",
  "_nodeVersion": "10.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/power-assert-context-formatter_1.2.0_1528787606329_0.9301058052519364"
  },
  "_npmUser": {
    "name": "twada",
    "email": "takuto.wada@gmail.com"
  },
  "_npmVersion": "6.1.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "power-assert-context-formatter@^1.0.7",
    "scope": null,
    "escapedName": "power-assert-context-formatter",
    "name": "power-assert-context-formatter",
    "rawSpec": "^1.0.7",
    "spec": ">=1.0.7 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/power-assert-formatter"
  ],
  "_resolved": "https://registry.npmjs.org/power-assert-context-formatter/-/power-assert-context-formatter-1.2.0.tgz",
  "_shasum": "8fbe72692288ec5a7203cdf215c8b838a6061d2a",
  "_shrinkwrap": null,
  "_spec": "power-assert-context-formatter@^1.0.7",
  "_where": "/home/laboratoria/proyectos/electivos/burger-queen/functions/node_modules/power-assert-formatter",
  "author": {
    "name": "Takuto Wada",
    "email": "takuto.wada@gmail.com",
    "url": "https://github.com/twada"
  },
  "bugs": {
    "url": "https://github.com/twada/power-assert-runtime/issues"
  },
  "dependencies": {
    "core-js": "^2.0.0",
    "power-assert-context-traversal": "^1.2.0"
  },
  "description": "format power-assert context",
  "devDependencies": {
    "mocha": "^5.0.0",
    "power-assert-context-reducer-ast": "^1.2.0",
    "power-assert-renderer-assertion": "^1.2.0",
    "power-assert-renderer-diagram": "^1.2.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-HLNEW8Bin+BFCpk/zbyKwkEu9W8/zThIStxGo7weYcFkKgMuGCHUJhvJeBGXDZf0Qm2xis4pbnnciGZiX0EpSg==",
    "shasum": "8fbe72692288ec5a7203cdf215c8b838a6061d2a",
    "tarball": "https://registry.npmjs.org/power-assert-context-formatter/-/power-assert-context-formatter-1.2.0.tgz",
    "fileCount": 7,
    "unpackedSize": 9776,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbH3KWCRA9TVsSAnZWagAAqmMQAJhPSur8M2zRNKg+Jl5H\ng8uY5nkAiaaONV8/PgHAE4QRCdYuXyRWb4G3KVswCqU3aUArBtb4llNYJEjq\nFIoFDFaY5WT508n6MKyYSRLJgzyIqKhAgFwdL7VdSR8N4eNACbO3X5Xm+fKY\nkB6565CtZ+XWBCYkcsWsZWn/I7KXyy1dvhmBG49Kp73+kSiYYYSeTPGky0po\nHj/iLj+d9PvhF570R+m6APTyo6ooslbbBrz/WuokqJNkHiXIWXRcjUTlI07p\nYmq3d7FQalG18VR+ukFPmeUrP74ZH0JC4Q84kCGaBWdm8uHqB5YsLvV3TyAi\nF2NBb/BN32nj49Z81gtP1jd9ESfPE9TLXaRoexn4zZjDjfUIA95bEwb+Kqtm\nQ9mfhWT4mIOMEB5GH3kWQcGSiEwUOMkkuLsXkHbcyp7tPLRZUjpTvXYjJqHs\nKL0QfgFOGMSgVfNRf7yHMm/bgLwtcb87lAC22dJT8D8XqNGTHyQJRNvebI5Z\nZBlN2dLkRjLBKuQLTR6rVbjX2b4y4IQcv+75mMq32TBRd1+TrtKS+hjfrLca\noz4FQW1YlVTW2k3EmpzYnseJIXy342GY94jn27ZFPOrD6pm2gqjrtghh9TKX\nwmvzrNIdyeWPJi+AAbp/ie5zrX1os6qkCyw1bQr7YrkpGgA7D/iie2D45L/r\nDvb1\r\n=WYYA\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "README.md",
    "index.js",
    "lib"
  ],
  "homepage": "https://github.com/twada/power-assert-runtime",
  "keywords": [
    "power-assert"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "twada",
      "email": "takuto.wada@gmail.com"
    }
  ],
  "name": "power-assert-context-formatter",
  "optionalDependencies": {},
  "readme": "[![power-assert][power-assert-banner]][power-assert-url]\n\n[![Build Status][travis-image]][travis-url]\n[![NPM version][npm-image]][npm-url]\n[![License][license-image]][license-url]\n\n\nCreate function to format `powerAssertContext` object provided by power-assert at runtime.\n\n\nUSAGE\n---------------------------------------\n\n```javascript\nvar createFormatter = require('power-assert-context-formatter');\nvar FileRenderer = require('power-assert-renderer-file');\nvar AssertionRenderer = require('power-assert-renderer-assertion');\nvar DiagramRenderer = require('power-assert-renderer-diagram');\nvar ComparisonRenderer = require('power-assert-renderer-comparison');\n\nvar format = createFormatter({\n    renderers: [\n        FileRenderer,\n        AssertionRenderer,\n        DiagramRenderer,\n        ComparisonRenderer\n    ]\n});\n\nvar assert = require('assert');\n\nvar foo = 'foo';\nvar bar = 'bar';\ntry {\n    assert(foo === bar);\n} catch (e) {\n    var formattedText = format(e.powerAssertContext);\n    . . .\n}\n```\n\n\nAPI\n---------------------------------------\n\n### var createFormatter = require('power-assert-context-formatter');\n\n| return type |\n|:------------|\n| `function`  |\n\nReturns creator function of formatter.\n\n\n### var format = createFormatter(options);\n\n| return type |\n|:------------|\n| `function`  |\n\nCreate format function to format `powerAssertContext` object provided by power-assert.\n\n\n#### options.renderers\n\n| type                                         | default value |\n|:---------------------------------------------|:--------------|\n| `Array` of `function` or `Array` of `object` | null          |\n\nArray of constructor function of various Renderers.\nEach Renderer is instantiated for each assertion and registered to `ContextTraversal`.\n\n##### customization\n\nEach renderer accepts its options via form of object literal.\n\n```javascript\nvar format = createFormatter({\n    renderers: [\n        { ctor: FileRenderer },\n        { ctor: AssertionRenderer },\n        { ctor: DiagramRenderer, options: { maxDepth: 2 } },\n        { ctor: ComparisonRenderer, options: { lineDiffThreshold: 3 } }\n    ]\n});\n```\n\n\n#### options.reducers\n\n| type                  | default value |\n|:----------------------|:--------------|\n| `Array` of `function` | empty array   |\n\nArray of reducer function to be applied to `powerAssertContext`.\n\n\n#### options.outputOffset\n\n| type     | default value |\n|:---------|:--------------|\n| `number` | `2`           |\n\nNumber of spaces inserted at the left in power-assert output.\n\n\n#### options.lineSeparator\n\n| type     | default value |\n|:---------|:--------------|\n| `string` | `\"\\n\"`        |\n\nLine separator in power assert output.\n\n\n#### options.legacy\n\n| type      | default value |\n|:----------|:--------------|\n| `boolean` | `false`       |\n\nWhen `true`, new renderers and legacy renderer implementations can be used together.\n\n\n### var formattedText = format(powerAssertContext);\n\n| return type |\n|:------------|\n| `string`  |\n\nFormat `powerAssertContext` into `formattedText`. `powerAssertContext` is an internal object structure, containing informations to render. Example of `powerAssertContext` is:\n\n```javascript\n{\n    source: {\n        content: 'assert(foo === bar)',\n        filepath: 'test/some_test.js',\n        line: 1,\n        ast: '### JSON representation of AST nodes ###',\n        tokens: '### JSON representation of AST tokens ###',\n        visitorKeys: '### JSON representation of AST visitor keys ###'\n    },\n    args: [\n        {\n            value: false,\n            events: [\n                {\n                    value: \"FOO\",\n                    espath: \"arguments/0/left\"\n                },\n                {\n                    value: \"BAR\",\n                    espath: \"arguments/0/right\"\n                },\n                {\n                    value: false,\n                    espath: \"arguments/0\"\n                }\n            ]\n        }\n    ]\n}\n```\n\n\nINSTALL\n---------------------------------------\n\n```sh\n$ npm install --save-dev power-assert-context-formatter\n```\n\n\nAUTHOR\n---------------------------------------\n* [Takuto Wada](https://github.com/twada)\n\n\nLICENSE\n---------------------------------------\nLicensed under the [MIT](https://github.com/twada/power-assert-runtime/blob/master/LICENSE) license.\n\n\n[power-assert-url]: https://github.com/power-assert-js/power-assert\n[power-assert-banner]: https://raw.githubusercontent.com/power-assert-js/power-assert-js-logo/master/banner/banner-official-fullcolor.png\n\n[travis-url]: https://travis-ci.org/twada/power-assert-runtime\n[travis-image]: https://secure.travis-ci.org/twada/power-assert-runtime.svg?branch=master\n\n[npm-url]: https://npmjs.org/package/power-assert-context-formatter\n[npm-image]: https://badge.fury.io/js/power-assert-context-formatter.svg\n\n[license-url]: https://github.com/twada/power-assert-runtime/blob/master/LICENSE\n[license-image]: https://img.shields.io/badge/license-MIT-brightgreen.svg\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/twada/power-assert-runtime.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "1.2.0"
}
