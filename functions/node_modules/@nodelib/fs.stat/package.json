{
  "_args": [
    [
      {
        "raw": "@nodelib/fs.stat@^1.0.1",
        "scope": "@nodelib",
        "escapedName": "@nodelib%2ffs.stat",
        "name": "@nodelib/fs.stat",
        "rawSpec": "^1.0.1",
        "spec": ">=1.0.1 <2.0.0",
        "type": "range"
      },
      "/home/laboratoria/proyectos/electivos/burger-queen/functions/node_modules/fast-glob"
    ]
  ],
  "_from": "@nodelib/fs.stat@^1.0.1",
  "_hasShrinkwrap": false,
  "_id": "@nodelib/fs.stat@1.1.2",
  "_integrity": "",
  "_location": "/@nodelib/fs.stat",
  "_nodeVersion": "10.9.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/fs.stat_1.1.2_1536006915122_0.2020775869125071"
  },
  "_npmUser": {
    "name": "mrmlnc",
    "email": "dmalinochkin@rambler.ru"
  },
  "_npmVersion": "6.4.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@nodelib/fs.stat@^1.0.1",
    "scope": "@nodelib",
    "escapedName": "@nodelib%2ffs.stat",
    "name": "@nodelib/fs.stat",
    "rawSpec": "^1.0.1",
    "spec": ">=1.0.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/fast-glob"
  ],
  "_resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-1.1.2.tgz",
  "_shasum": "54c5a964462be3d4d78af631363c18d6fa91ac26",
  "_shrinkwrap": null,
  "_spec": "@nodelib/fs.stat@^1.0.1",
  "_where": "/home/laboratoria/proyectos/electivos/burger-queen/functions/node_modules/fast-glob",
  "dependencies": {},
  "description": "Get the status of a file with some features",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-yprFYuno9FtNsSHVlSWd+nRlmGoAbqbeCwOryP6sC/zoCjhpArcRMYp19EvpSUSizJAlsXEwJv+wcWS9XaXdMw==",
    "shasum": "54c5a964462be3d4d78af631363c18d6fa91ac26",
    "tarball": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-1.1.2.tgz",
    "fileCount": 10,
    "unpackedSize": 9048,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbjZsDCRA9TVsSAnZWagAAPMUP/3zxahpFO1ZZ7VFzrt0y\nLMO10i/zqBELxxM7pevEY3Egz8OhSKyQfnA3Gn512JZdK6KjQZcq5cQgKdZW\nf+dIPHLeQnbFuDsE63Heu1s9V28r2Gg20UuyE+9AOGyk2mWmjhSGlhgjLpGA\nYVPcnEor5kvmBiKFGH7zi7EcH/SAYA8cDLlfFbpVhkKeRVrvP0C3tYYWpGNu\nK/g1Oa2hFXa1ECY5hiDxLt0SxjYLq7FZvXRYOFLMNGQJfdFkY2dB/fcYK4Kw\n2zxRjslTpjNudM/3qgzd/oEOMbLnAcr6UzX/qCTiKNMs6vZHo95IuIH9iJ97\ncjRJ16Ql2L2sOlRxYl1HdUQpYgrD4uBStDLDMmwwgM9zopNa/NMn12g0Pb+9\ni+edgoB7JW52dirsqx7onjbJ+i2ndHe9tb6xQCULwhp9cTHBuBdeQYAU3aRG\n6im4iP1MQK6kVZNKPX07CcX7B5RwqrPiXIwloKcXhvuNgo1ZvPvC97qp+JgN\nOoxycpLydPrUOY2EUV3YwpD5unMxCr8mFlvL9pcqiAVZMfEEBdFv4fFU4M0D\ng9u6pb75mNEraYQSiCsjAZLTCDweGtACeONEGLTJvzxS35sHq3uXpVl9fCiK\nuhhWYM1b/pF1qy5ET26W9VU+yEs/5dJaO8hx2UIvhUuRJQWH8C35JvZp/4wC\nNprt\r\n=8r5b\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 6"
  },
  "gitHead": "2258cf26a596d8a8aaca1a1cd548214398057e47",
  "keywords": [
    "NodeLib",
    "fs",
    "FileSystem",
    "file system",
    "stat"
  ],
  "license": "MIT",
  "main": "out/index.js",
  "maintainers": [
    {
      "name": "mrmlnc",
      "email": "dmalinochkin@rambler.ru"
    }
  ],
  "name": "@nodelib/fs.stat",
  "optionalDependencies": {},
  "readme": "# @nodelib/fs.stat\n\n> Get the status of a file with some features.\n\n## :bulb: Highlights\n\nWrapper over standard methods ([`fs.lstat`](https://nodejs.org/dist/latest/docs/api/fs.html#fs_fs_lstat_path_callback), [`fs.stat`](https://nodejs.org/dist/latest/docs/api/fs.html#fs_fs_stat_path_callback)) with some features.\n\n  * :beginner: Normally follows symlinks.\n  * :gear: Can safely work with broken symlinks (returns information about symlink instead of generating an error).\n\n## Install\n\n```\n$ npm install @nodelib/fs.stat\n```\n\n## Usage\n\n```js\nconst fsStat = require('@nodelib/fs.stat');\n\nfsStat.stat('path').then((stat) => {\n    console.log(stat); // => fs.Stats\n});\n```\n\n## API\n\n### fsStat.stat(path, [options])\n\nReturns a [`Promise<fs.Stats>`](https://nodejs.org/dist/latest/docs/api/fs.html#fs_class_fs_stats) for provided path.\n\n### fsStat.statSync(path, [options])\n\nReturns a [`fs.Stats`](https://nodejs.org/dist/latest/docs/api/fs.html#fs_class_fs_stats) for provided path.\n\n### fsStat.statCallback(path, [options], callback)\n\nReturns a [`fs.Stats`](https://nodejs.org/dist/latest/docs/api/fs.html#fs_class_fs_stats) for provided path with standard callback-style.\n\n#### path\n\n  * Type: `string | Buffer | URL`\n\nThe `path` argument for [`fs.lstat`](https://nodejs.org/dist/latest/docs/api/fs.html#fs_fs_lstat_path_callback) or [`fs.stat`](https://nodejs.org/dist/latest/docs/api/fs.html#fs_fs_stat_path_callback) method.\n\n#### options\n\n  * Type: `Object`\n\nSee [options](#options-1) section for more detailed information.\n\n## Options\n\n### throwErrorOnBrokenSymlinks\n\n  * Type: `boolean`\n  * Default: `true`\n\nThrow an error or return information about symlink, when symlink is broken. When `false`, methods will be return lstat call for broken symlinks.\n\n### followSymlinks\n\n  * Type: `boolean`\n  * Default: `true`\n\nBy default, the methods of this package follows symlinks. If you do not want it, set this option to `false` or use the standard method [`fs.lstat`](https://nodejs.org/dist/latest/docs/api/fs.html#fs_fs_lstat_path_callback).\n\n### fs\n\n  * Type: `FileSystemAdapter`\n  * Default: `built-in FS methods`\n\nBy default, the built-in Node.js module (`fs`) is used to work with the file system. You can replace each method with your own.\n\n```ts\ninterface FileSystemAdapter {\n\tlstat?: typeof fs.lstat;\n\tstat?: typeof fs.stat;\n\tlstatSync?: typeof fs.lstatSync;\n\tstatSync?: typeof fs.statSync;\n}\n```\n\n## Changelog\n\nSee the [Releases section of our GitHub project](https://github.com/nodelib/nodelib/releases) for changelogs for each release version.\n\n## License\n\nThis software is released under the terms of the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/nodelib/nodelib/tree/master/packages/fs.stat"
  },
  "scripts": {
    "build": "npm run clean && npm run lint && npm run compile && npm test",
    "clean": "rimraf out",
    "compile": "tsc -b .",
    "compile:watch": "tsc -p . --watch",
    "lint": "tslint \"src/**/*.ts\" -p . -t stylish",
    "test": "mocha \"out/**/*.spec.js\" -s 0",
    "watch": "npm run clean && npm run compile:watch"
  },
  "typings": "out/index.d.ts",
  "version": "1.1.2"
}
